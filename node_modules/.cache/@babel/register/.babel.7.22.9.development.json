{"{\"assumptions\":{},\"sourceRoot\":\"/Users/nextstep/Desktop/Bootcamp/svg_logo_maker/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nextstep/Desktop/Bootcamp/svg_logo_maker\",\"filename\":\"/Users/nextstep/Desktop/Bootcamp/svg_logo_maker/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nextstep/Desktop/Bootcamp/svg_logo_maker\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.9:development":{"value":{"code":"const inquirer = require('inquirer');\nconst fs = require('fs');\nconst {\n  Circle,\n  Triangle,\n  Square\n} = require('./lib/shapes.test');\nasync function validateColorInput(input) {\n  // VALIDATE HEXADECIMAL COLOUR CODE\n  const hexColorRegex = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n  if (input.match(hexColorRegex) || input.toLowerCase() === 'red') {\n    return true;\n  }\n  return 'Please enter a valid color keyword or hexadecimal color code (e.g., \"#FF0000\" or \"red\").';\n}\nasync function generateLogo() {\n  const userInput = await inquirer.prompt([{\n    type: 'input',\n    name: 'text',\n    message: 'Enter up to three characters for the logo text:',\n    validate: input => input.length <= 3 || 'Text should be up to three characters.'\n  }, {\n    type: 'input',\n    name: 'textColor',\n    message: 'Enter a color keyword or hexadecimal number for the text color:',\n    validate: validateColorInput\n  }, {\n    type: 'list',\n    name: 'shape',\n    message: 'Choose a shape for the logo:',\n    choices: ['Circle', 'Triangle', 'Square']\n  }, {\n    type: 'input',\n    name: 'shapeColor',\n    message: 'Enter a color keyword or hexadecimal number for the shape color:',\n    validate: validateColorInput\n  }, {\n    type: 'number',\n    name: 'shapeSize',\n    message: 'Enter the size (side length or radius) for the shape:',\n    validate: input => input > 0 || 'Size should be a positive number.'\n  }]);\n  let selectedShape;\n  switch (userInput.shape) {\n    case 'Circle':\n      selectedShape = new Circle(userInput.shapeSize, userInput.shapeColor);\n      break;\n    case 'Triangle':\n      selectedShape = new Triangle(userInput.shapeSize, userInput.shapeColor);\n      break;\n    case 'Square':\n      selectedShape = new Square(userInput.shapeSize, userInput.shapeColor);\n      break;\n    default:\n      console.error('Invalid shape selected.');\n      return;\n  }\n  const svgCode = `\n        <svg width=\"300\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\">\n            <!-- Add text SVG element here using userInput.text and userInput.textColor -->\n            ${selectedShape.generateSVG()}\n        </svg>\n    `;\n  fs.writeFileSync('logo.svg', svgCode);\n  console.log('Generated logo.svg');\n}\ngenerateLogo();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpbnF1aXJlciIsInJlcXVpcmUiLCJmcyIsIkNpcmNsZSIsIlRyaWFuZ2xlIiwiU3F1YXJlIiwidmFsaWRhdGVDb2xvcklucHV0IiwiaW5wdXQiLCJoZXhDb2xvclJlZ2V4IiwibWF0Y2giLCJ0b0xvd2VyQ2FzZSIsImdlbmVyYXRlTG9nbyIsInVzZXJJbnB1dCIsInByb21wdCIsInR5cGUiLCJuYW1lIiwibWVzc2FnZSIsInZhbGlkYXRlIiwibGVuZ3RoIiwiY2hvaWNlcyIsInNlbGVjdGVkU2hhcGUiLCJzaGFwZSIsInNoYXBlU2l6ZSIsInNoYXBlQ29sb3IiLCJjb25zb2xlIiwiZXJyb3IiLCJzdmdDb2RlIiwiZ2VuZXJhdGVTVkciLCJ3cml0ZUZpbGVTeW5jIiwibG9nIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvbmV4dHN0ZXAvRGVza3RvcC9Cb290Y2FtcC9zdmdfbG9nb19tYWtlci8iLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGlucXVpcmVyID0gcmVxdWlyZSgnaW5xdWlyZXInKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IHsgQ2lyY2xlLCBUcmlhbmdsZSwgU3F1YXJlIH0gPSByZXF1aXJlKCcuL2xpYi9zaGFwZXMudGVzdCcpO1xuXG5hc3luYyBmdW5jdGlvbiB2YWxpZGF0ZUNvbG9ySW5wdXQoaW5wdXQpIHtcblxuICAgIC8vIFZBTElEQVRFIEhFWEFERUNJTUFMIENPTE9VUiBDT0RFXG4gICAgY29uc3QgaGV4Q29sb3JSZWdleCA9IC9eIyhbQS1GYS1mMC05XXs2fXxbQS1GYS1mMC05XXszfSkkLztcbiAgICBcbiAgICBpZiAoaW5wdXQubWF0Y2goaGV4Q29sb3JSZWdleCkgfHwgaW5wdXQudG9Mb3dlckNhc2UoKSA9PT0gJ3JlZCcpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiAnUGxlYXNlIGVudGVyIGEgdmFsaWQgY29sb3Iga2V5d29yZCBvciBoZXhhZGVjaW1hbCBjb2xvciBjb2RlIChlLmcuLCBcIiNGRjAwMDBcIiBvciBcInJlZFwiKS4nO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUxvZ28oKSB7XG4gICAgY29uc3QgdXNlcklucHV0ID0gYXdhaXQgaW5xdWlyZXIucHJvbXB0KFtcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2lucHV0JyxcbiAgICAgICAgICAgIG5hbWU6ICd0ZXh0JyxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdFbnRlciB1cCB0byB0aHJlZSBjaGFyYWN0ZXJzIGZvciB0aGUgbG9nbyB0ZXh0OicsXG4gICAgICAgICAgICB2YWxpZGF0ZTogaW5wdXQgPT4gaW5wdXQubGVuZ3RoIDw9IDMgfHwgJ1RleHQgc2hvdWxkIGJlIHVwIHRvIHRocmVlIGNoYXJhY3RlcnMuJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2lucHV0JyxcbiAgICAgICAgICAgIG5hbWU6ICd0ZXh0Q29sb3InLFxuICAgICAgICAgICAgbWVzc2FnZTogJ0VudGVyIGEgY29sb3Iga2V5d29yZCBvciBoZXhhZGVjaW1hbCBudW1iZXIgZm9yIHRoZSB0ZXh0IGNvbG9yOicsXG4gICAgICAgICAgICB2YWxpZGF0ZTogdmFsaWRhdGVDb2xvcklucHV0LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnbGlzdCcsXG4gICAgICAgICAgICBuYW1lOiAnc2hhcGUnLFxuICAgICAgICAgICAgbWVzc2FnZTogJ0Nob29zZSBhIHNoYXBlIGZvciB0aGUgbG9nbzonLFxuICAgICAgICAgICAgY2hvaWNlczogWydDaXJjbGUnLCAnVHJpYW5nbGUnLCAnU3F1YXJlJ10sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdpbnB1dCcsXG4gICAgICAgICAgICBuYW1lOiAnc2hhcGVDb2xvcicsXG4gICAgICAgICAgICBtZXNzYWdlOiAnRW50ZXIgYSBjb2xvciBrZXl3b3JkIG9yIGhleGFkZWNpbWFsIG51bWJlciBmb3IgdGhlIHNoYXBlIGNvbG9yOicsXG4gICAgICAgICAgICB2YWxpZGF0ZTogdmFsaWRhdGVDb2xvcklucHV0LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICAgICAgICAgIG5hbWU6ICdzaGFwZVNpemUnLFxuICAgICAgICAgICAgbWVzc2FnZTogJ0VudGVyIHRoZSBzaXplIChzaWRlIGxlbmd0aCBvciByYWRpdXMpIGZvciB0aGUgc2hhcGU6JyxcbiAgICAgICAgICAgIHZhbGlkYXRlOiBpbnB1dCA9PiBpbnB1dCA+IDAgfHwgJ1NpemUgc2hvdWxkIGJlIGEgcG9zaXRpdmUgbnVtYmVyLicsXG4gICAgICAgIH0sXG4gICAgXSk7XG5cbiAgICBsZXQgc2VsZWN0ZWRTaGFwZTtcbiAgICBzd2l0Y2ggKHVzZXJJbnB1dC5zaGFwZSkge1xuICAgICAgICBjYXNlICdDaXJjbGUnOlxuICAgICAgICAgICAgc2VsZWN0ZWRTaGFwZSA9IG5ldyBDaXJjbGUodXNlcklucHV0LnNoYXBlU2l6ZSwgdXNlcklucHV0LnNoYXBlQ29sb3IpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ1RyaWFuZ2xlJzpcbiAgICAgICAgICAgIHNlbGVjdGVkU2hhcGUgPSBuZXcgVHJpYW5nbGUodXNlcklucHV0LnNoYXBlU2l6ZSwgdXNlcklucHV0LnNoYXBlQ29sb3IpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ1NxdWFyZSc6XG4gICAgICAgICAgICBzZWxlY3RlZFNoYXBlID0gbmV3IFNxdWFyZSh1c2VySW5wdXQuc2hhcGVTaXplLCB1c2VySW5wdXQuc2hhcGVDb2xvcik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgc2hhcGUgc2VsZWN0ZWQuJyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qgc3ZnQ29kZSA9IGBcbiAgICAgICAgPHN2ZyB3aWR0aD1cIjMwMFwiIGhlaWdodD1cIjIwMFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbiAgICAgICAgICAgIDwhLS0gQWRkIHRleHQgU1ZHIGVsZW1lbnQgaGVyZSB1c2luZyB1c2VySW5wdXQudGV4dCBhbmQgdXNlcklucHV0LnRleHRDb2xvciAtLT5cbiAgICAgICAgICAgICR7c2VsZWN0ZWRTaGFwZS5nZW5lcmF0ZVNWRygpfVxuICAgICAgICA8L3N2Zz5cbiAgICBgO1xuXG4gICAgZnMud3JpdGVGaWxlU3luYygnbG9nby5zdmcnLCBzdmdDb2RlKTtcbiAgICBjb25zb2xlLmxvZygnR2VuZXJhdGVkIGxvZ28uc3ZnJyk7XG59XG5cbmdlbmVyYXRlTG9nbygpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFDcEMsTUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUMsSUFBSSxDQUFDO0FBQ3hCLE1BQU07RUFBRUUsTUFBTTtFQUFFQyxRQUFRO0VBQUVDO0FBQU8sQ0FBQyxHQUFHSixPQUFPLENBQUMsbUJBQW1CLENBQUM7QUFFakUsZUFBZUssa0JBQWtCQSxDQUFDQyxLQUFLLEVBQUU7RUFFckM7RUFDQSxNQUFNQyxhQUFhLEdBQUcsb0NBQW9DO0VBRTFELElBQUlELEtBQUssQ0FBQ0UsS0FBSyxDQUFDRCxhQUFhLENBQUMsSUFBSUQsS0FBSyxDQUFDRyxXQUFXLENBQUMsQ0FBQyxLQUFLLEtBQUssRUFBRTtJQUM3RCxPQUFPLElBQUk7RUFDZjtFQUVBLE9BQU8sMEZBQTBGO0FBQ3JHO0FBRUEsZUFBZUMsWUFBWUEsQ0FBQSxFQUFHO0VBQzFCLE1BQU1DLFNBQVMsR0FBRyxNQUFNWixRQUFRLENBQUNhLE1BQU0sQ0FBQyxDQUNwQztJQUNJQyxJQUFJLEVBQUUsT0FBTztJQUNiQyxJQUFJLEVBQUUsTUFBTTtJQUNaQyxPQUFPLEVBQUUsaURBQWlEO0lBQzFEQyxRQUFRLEVBQUVWLEtBQUssSUFBSUEsS0FBSyxDQUFDVyxNQUFNLElBQUksQ0FBQyxJQUFJO0VBQzVDLENBQUMsRUFDRDtJQUNJSixJQUFJLEVBQUUsT0FBTztJQUNiQyxJQUFJLEVBQUUsV0FBVztJQUNqQkMsT0FBTyxFQUFFLGlFQUFpRTtJQUMxRUMsUUFBUSxFQUFFWDtFQUNkLENBQUMsRUFDRDtJQUNJUSxJQUFJLEVBQUUsTUFBTTtJQUNaQyxJQUFJLEVBQUUsT0FBTztJQUNiQyxPQUFPLEVBQUUsOEJBQThCO0lBQ3ZDRyxPQUFPLEVBQUUsQ0FBQyxRQUFRLEVBQUUsVUFBVSxFQUFFLFFBQVE7RUFDNUMsQ0FBQyxFQUNEO0lBQ0lMLElBQUksRUFBRSxPQUFPO0lBQ2JDLElBQUksRUFBRSxZQUFZO0lBQ2xCQyxPQUFPLEVBQUUsa0VBQWtFO0lBQzNFQyxRQUFRLEVBQUVYO0VBQ2QsQ0FBQyxFQUNEO0lBQ0lRLElBQUksRUFBRSxRQUFRO0lBQ2RDLElBQUksRUFBRSxXQUFXO0lBQ2pCQyxPQUFPLEVBQUUsdURBQXVEO0lBQ2hFQyxRQUFRLEVBQUVWLEtBQUssSUFBSUEsS0FBSyxHQUFHLENBQUMsSUFBSTtFQUNwQyxDQUFDLENBQ0osQ0FBQztFQUVGLElBQUlhLGFBQWE7RUFDakIsUUFBUVIsU0FBUyxDQUFDUyxLQUFLO0lBQ25CLEtBQUssUUFBUTtNQUNURCxhQUFhLEdBQUcsSUFBSWpCLE1BQU0sQ0FBQ1MsU0FBUyxDQUFDVSxTQUFTLEVBQUVWLFNBQVMsQ0FBQ1csVUFBVSxDQUFDO01BQ3JFO0lBQ0osS0FBSyxVQUFVO01BQ1hILGFBQWEsR0FBRyxJQUFJaEIsUUFBUSxDQUFDUSxTQUFTLENBQUNVLFNBQVMsRUFBRVYsU0FBUyxDQUFDVyxVQUFVLENBQUM7TUFDdkU7SUFDSixLQUFLLFFBQVE7TUFDVEgsYUFBYSxHQUFHLElBQUlmLE1BQU0sQ0FBQ08sU0FBUyxDQUFDVSxTQUFTLEVBQUVWLFNBQVMsQ0FBQ1csVUFBVSxDQUFDO01BQ3JFO0lBQ0o7TUFDSUMsT0FBTyxDQUFDQyxLQUFLLENBQUMseUJBQXlCLENBQUM7TUFDeEM7RUFDUjtFQUVBLE1BQU1DLE9BQU8sR0FBSTtBQUNyQjtBQUNBO0FBQ0EsY0FBY04sYUFBYSxDQUFDTyxXQUFXLENBQUMsQ0FBRTtBQUMxQztBQUNBLEtBQUs7RUFFRHpCLEVBQUUsQ0FBQzBCLGFBQWEsQ0FBQyxVQUFVLEVBQUVGLE9BQU8sQ0FBQztFQUNyQ0YsT0FBTyxDQUFDSyxHQUFHLENBQUMsb0JBQW9CLENBQUM7QUFDckM7QUFFQWxCLFlBQVksQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["inquirer","require","fs","Circle","Triangle","Square","validateColorInput","input","hexColorRegex","match","toLowerCase","generateLogo","userInput","prompt","type","name","message","validate","length","choices","selectedShape","shape","shapeSize","shapeColor","console","error","svgCode","generateSVG","writeFileSync","log"],"sourceRoot":"/Users/nextstep/Desktop/Bootcamp/svg_logo_maker/","sources":["index.js"],"sourcesContent":["const inquirer = require('inquirer');\nconst fs = require('fs');\nconst { Circle, Triangle, Square } = require('./lib/shapes.test');\n\nasync function validateColorInput(input) {\n\n    // VALIDATE HEXADECIMAL COLOUR CODE\n    const hexColorRegex = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    \n    if (input.match(hexColorRegex) || input.toLowerCase() === 'red') {\n        return true;\n    }\n    \n    return 'Please enter a valid color keyword or hexadecimal color code (e.g., \"#FF0000\" or \"red\").';\n}\n\nasync function generateLogo() {\n    const userInput = await inquirer.prompt([\n        {\n            type: 'input',\n            name: 'text',\n            message: 'Enter up to three characters for the logo text:',\n            validate: input => input.length <= 3 || 'Text should be up to three characters.',\n        },\n        {\n            type: 'input',\n            name: 'textColor',\n            message: 'Enter a color keyword or hexadecimal number for the text color:',\n            validate: validateColorInput,\n        },\n        {\n            type: 'list',\n            name: 'shape',\n            message: 'Choose a shape for the logo:',\n            choices: ['Circle', 'Triangle', 'Square'],\n        },\n        {\n            type: 'input',\n            name: 'shapeColor',\n            message: 'Enter a color keyword or hexadecimal number for the shape color:',\n            validate: validateColorInput,\n        },\n        {\n            type: 'number',\n            name: 'shapeSize',\n            message: 'Enter the size (side length or radius) for the shape:',\n            validate: input => input > 0 || 'Size should be a positive number.',\n        },\n    ]);\n\n    let selectedShape;\n    switch (userInput.shape) {\n        case 'Circle':\n            selectedShape = new Circle(userInput.shapeSize, userInput.shapeColor);\n            break;\n        case 'Triangle':\n            selectedShape = new Triangle(userInput.shapeSize, userInput.shapeColor);\n            break;\n        case 'Square':\n            selectedShape = new Square(userInput.shapeSize, userInput.shapeColor);\n            break;\n        default:\n            console.error('Invalid shape selected.');\n            return;\n    }\n\n    const svgCode = `\n        <svg width=\"300\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\">\n            <!-- Add text SVG element here using userInput.text and userInput.textColor -->\n            ${selectedShape.generateSVG()}\n        </svg>\n    `;\n\n    fs.writeFileSync('logo.svg', svgCode);\n    console.log('Generated logo.svg');\n}\n\ngenerateLogo();\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AACxB,MAAM;EAAEE,MAAM;EAAEC,QAAQ;EAAEC;AAAO,CAAC,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AAEjE,eAAeK,kBAAkBA,CAACC,KAAK,EAAE;EAErC;EACA,MAAMC,aAAa,GAAG,oCAAoC;EAE1D,IAAID,KAAK,CAACE,KAAK,CAACD,aAAa,CAAC,IAAID,KAAK,CAACG,WAAW,CAAC,CAAC,KAAK,KAAK,EAAE;IAC7D,OAAO,IAAI;EACf;EAEA,OAAO,0FAA0F;AACrG;AAEA,eAAeC,YAAYA,CAAA,EAAG;EAC1B,MAAMC,SAAS,GAAG,MAAMZ,QAAQ,CAACa,MAAM,CAAC,CACpC;IACIC,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE,iDAAiD;IAC1DC,QAAQ,EAAEV,KAAK,IAAIA,KAAK,CAACW,MAAM,IAAI,CAAC,IAAI;EAC5C,CAAC,EACD;IACIJ,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE,iEAAiE;IAC1EC,QAAQ,EAAEX;EACd,CAAC,EACD;IACIQ,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,OAAO;IACbC,OAAO,EAAE,8BAA8B;IACvCG,OAAO,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ;EAC5C,CAAC,EACD;IACIL,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAE,kEAAkE;IAC3EC,QAAQ,EAAEX;EACd,CAAC,EACD;IACIQ,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE,uDAAuD;IAChEC,QAAQ,EAAEV,KAAK,IAAIA,KAAK,GAAG,CAAC,IAAI;EACpC,CAAC,CACJ,CAAC;EAEF,IAAIa,aAAa;EACjB,QAAQR,SAAS,CAACS,KAAK;IACnB,KAAK,QAAQ;MACTD,aAAa,GAAG,IAAIjB,MAAM,CAACS,SAAS,CAACU,SAAS,EAAEV,SAAS,CAACW,UAAU,CAAC;MACrE;IACJ,KAAK,UAAU;MACXH,aAAa,GAAG,IAAIhB,QAAQ,CAACQ,SAAS,CAACU,SAAS,EAAEV,SAAS,CAACW,UAAU,CAAC;MACvE;IACJ,KAAK,QAAQ;MACTH,aAAa,GAAG,IAAIf,MAAM,CAACO,SAAS,CAACU,SAAS,EAAEV,SAAS,CAACW,UAAU,CAAC;MACrE;IACJ;MACIC,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC;MACxC;EACR;EAEA,MAAMC,OAAO,GAAI;AACrB;AACA;AACA,cAAcN,aAAa,CAACO,WAAW,CAAC,CAAE;AAC1C;AACA,KAAK;EAEDzB,EAAE,CAAC0B,aAAa,CAAC,UAAU,EAAEF,OAAO,CAAC;EACrCF,OAAO,CAACK,GAAG,CAAC,oBAAoB,CAAC;AACrC;AAEAlB,YAAY,CAAC,CAAC"}},"mtime":1691416718411}}